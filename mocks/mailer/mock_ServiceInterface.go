// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mailer "github.com/samgozman/go-bloggy/internal/mailer"
	mock "github.com/stretchr/testify/mock"
)

// MockServiceInterface is an autogenerated mock type for the ServiceInterface type
type MockServiceInterface struct {
	mock.Mock
}

// SendConfirmationEmail provides a mock function with given fields: to, confirmationID
func (_m *MockServiceInterface) SendConfirmationEmail(to string, confirmationID string) error {
	ret := _m.Called(to, confirmationID)

	if len(ret) == 0 {
		panic("no return value specified for SendConfirmationEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(to, confirmationID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SendPostEmail provides a mock function with given fields: pe
func (_m *MockServiceInterface) SendPostEmail(pe *mailer.PostEmailSend) error {
	ret := _m.Called(pe)

	if len(ret) == 0 {
		panic("no return value specified for SendPostEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*mailer.PostEmailSend) error); ok {
		r0 = rf(pe)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockServiceInterface creates a new instance of MockServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockServiceInterface {
	mock := &MockServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
